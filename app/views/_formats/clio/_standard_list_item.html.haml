-# FORMATS/CLIO
-# for search-results listing

/ _formats/clio/_standard_list_item.html.haml
/ container for a SINGLE doc

-# maybe handy to have a per-item anchor?
-# %a{name: document.fetch(:id)}

.result.document{class: "#{render_document_class(document)} #{'database_record' if document.is_database?}", source: 'catalog', item_id: document.id, data: document_data_attributes(document), standard_ids: extract_standard_bibkeys(document).join(",")}

  .row
    .title.col-sm-12
      = render '/coins', document: document

      .item_anchor
        = render '/saved_lists/item_select_checkbox', item_id: document.id, counter: counter

      .item_select_allowance
        -# This is how core Blacklight would do it...
        -# = link_to_document document, document_show_link_field(document), counter: counter
        -# We need the 'source' to setup a datasource-specific path
        = link_to_source_document document, :label=> document_show_link_field(document), :counter => counter, :source => source


  / main container for doc partial view
  - cache("standard_list_item_#{document.cache_key}") do
    .row

      .details.col-sm-10
        = render "/_formats/clio/catalog_list_details", document: document

      .doc_bookjacket.col-sm-2.hidden-xs
        - if badge = get_badge_html(document)
          -# - raise
          = badge
        - else
          =image_tag("spacer.png", :class => "list_view bookjacket " + extract_standard_bibkeys(document).listify.collect { |x| "id_" + x.to_s.gsub(':','')}.join(" "))


