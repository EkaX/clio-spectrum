
-# Render Call-Number Facet for Subclass (lc_subclass_facet)
-# (See NEXT-1085)

-# - raise

-# facet_field is Blacklight::SolrResponse::Facets::FacetField 
- solr_field = "lc_subclass_facet"
- facet_field = @response.aggregations[solr_field]

-# What is the selected LC prefix?
-# Should be a single-letter, but set to false if not defined
- selected_callnumber_prefix ||= false

-# Put a really high limit on, to get essentially all potential facets,
-# Then we'll loop through everything Solr returns, display only the matching ones.
- paginator = Blacklight::Solr::FacetPaginator.new(facet_field.items, :limit => 500 )

- prefixed_items = paginator.items.select { |item| item.value[0] == selected_callnumber_prefix }

-# But, we restrict on-screen display to a reasonable number
- display_max = 25
- counter = 0

%li.refine_callnumber_header
  = "Refine Call Number #{selected_callnumber_prefix}".html_safe

- prefixed_items.each do |item|
  - counter = counter + 1
  - break if counter > display_max

  %li.callnumber_subclass
    -# Render, as selected or unselected
    - if facet_in_params?( solr_field, item.value )
      = render_selected_facet_value(solr_field, item)
    - else
      = render_facet_value(solr_field, item)

- if(prefixed_items.count > display_max)
  %li.callnumber_subclass.more_facets_link
    - extra_params = {"f.lc_subclass_facet.facet.prefix" => selected_callnumber_prefix}
    = link_to(t('blacklight.search.facets.more'), params.to_unsafe_hash.merge(id: solr_field, action: 'facet', extra_params: extra_params), class: 'more_facets_link')

%li.refine_callnumber_footer
  &nbsp;

  



